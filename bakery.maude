mod BAKERY is
    *** Imports
    including CONFIGURATION .
    including NAT .

    *** Sorts
    sorts GBState Mode Conf .
    subsorts Dispenser BProcess < Configuration .

    *** Operations
    op none : -> GBState .
    op [[_]] : Configuration -> GBState [ctor ] .
    op __ : Conf Conf -> Conf [ctor assoc comm] .
    ops sleep wait crit : -> Mode [ctor] .
    op initial : Nat -> GBState .

    *** Classes
    --- class BProcess | mode: Mode, number: Nat .
    sort BProcess .
    subsort BProcess < Cid .
    op BProcess: -> BProcess .
    op mode:_ : Mode -> Attribute [gather (&)] .
    op number:_ : Nat -> Attribute [gather (&)] .

    --- class Dispenser | next: Nat, last: Nat .
    sort Dispenser .
    subsort Dispenser < Cid .
    op Dispenser: -> Dispenser .
    op next:_ : Nat -> Attribute [gather (&)] .
    op last:_ : Nat -> Attribute [gather (&)] .

    *** Vars
    var N : Nat .
    var dispenserId : Oid .
    var Dispenser : Dispenser .

    *** Equations
    eq initial(0) =  [ [ < dispenserId : Dispenser | next: 0, last: s 0 > ] ] .
    *** eq initial(s N) = < s N : BProcess | mode: sleep, number: 0, Atts > initial(N) .
    
endm
